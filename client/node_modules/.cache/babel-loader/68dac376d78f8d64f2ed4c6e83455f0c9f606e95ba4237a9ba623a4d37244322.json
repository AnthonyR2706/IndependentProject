{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other\\\\IndependentProject\\\\client\\\\src\\\\components\\\\ChannelSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport { SearchIcon } from '../assets/Search.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChannelSearch = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [LoadingChannels, setLoading] = useState(false);\n  const getChannels = async text => {\n    try {\n      // TODO: fetch channels\n    } catch (error) {\n      setQuery('');\n    }\n  };\n  const onSearch = event => {\n    event.preventDefault();\n    setLoading(true);\n    setQuery(event.target.value);\n    getChannels(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-search_container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-search_input_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channel-search_input_icon\",\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"channel-_input_text\",\n        placeholder: \"Search\",\n        type: \"text\",\n        value: query,\n        onChange: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(ChannelSearch, \"0p5iFhwzjz/9kxrBlz+sV1DqSOw=\");\n_c = ChannelSearch;\nexport default ChannelSearch;\nvar _c;\n$RefreshReg$(_c, \"ChannelSearch\");","map":{"version":3,"names":["React","useState","useEffect","useChatContext","SearchIcon","jsxDEV","_jsxDEV","ChannelSearch","_s","query","setQuery","LoadingChannels","setLoading","getChannels","text","error","onSearch","event","preventDefault","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","onChange","_c","$RefreshReg$"],"sources":["D:/Other/IndependentProject/client/src/components/ChannelSearch.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { useChatContext } from 'stream-chat-react';\r\nimport {SearchIcon} from '../assets/Search.png';\r\n\r\nconst ChannelSearch = () => {\r\n    const [query, setQuery] = useState('');\r\n    const [LoadingChannels, setLoading] = useState(false);\r\n    const getChannels = async (text) => {\r\n        try {\r\n            // TODO: fetch channels\r\n        } catch (error) {\r\n            setQuery('')\r\n        }\r\n    }\r\n    const onSearch = (event) => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        setQuery(event.target.value);\r\n        getChannels(event.target.value);\r\n    }\r\n    return (\r\n        <div className = \"channel-search_container\">\r\n            <div className = \"channel-search_input_wrapper\">\r\n                <div className = \"channel-search_input_icon\">\r\n                    <SearchIcon></SearchIcon>\r\n                </div>\r\n                <input className = \"channel-_input_text\" \r\n                placeholder = \"Search\"\r\n                type = \"text\"\r\n                value = {query}\r\n                onChange = {onSearch}>\r\n                </input>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelSearch"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAAQC,UAAU,QAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,eAAe,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMY,WAAW,GAAG,MAAOC,IAAI,IAAK;IAChC,IAAI;MACA;IAAA,CACH,CAAC,OAAOC,KAAK,EAAE;MACZL,QAAQ,CAAC,EAAE,CAAC;IAChB;EACJ,CAAC;EACD,MAAMM,QAAQ,GAAIC,KAAK,IAAK;IACxBA,KAAK,CAACC,cAAc,EAAE;IACtBN,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAACO,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;IAC5BP,WAAW,CAACI,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EACD,oBACId,OAAA;IAAKe,SAAS,EAAG,0BAA0B;IAAAC,QAAA,eACvChB,OAAA;MAAKe,SAAS,EAAG,8BAA8B;MAAAC,QAAA,gBAC3ChB,OAAA;QAAKe,SAAS,EAAG,2BAA2B;QAAAC,QAAA,eACxChB,OAAA,CAACF,UAAU;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAc;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvB,eACNpB,OAAA;QAAOe,SAAS,EAAG,qBAAqB;QACxCM,WAAW,EAAG,QAAQ;QACtBC,IAAI,EAAG,MAAM;QACbR,KAAK,EAAIX,KAAM;QACfoB,QAAQ,EAAIb;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACb;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAAlB,EAAA,CA/BKD,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAiCnB,eAAeA,aAAa;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}