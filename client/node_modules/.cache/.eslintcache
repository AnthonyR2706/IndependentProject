[{"D:\\Other\\IndependentProject\\client\\src\\index.js":"1","D:\\Other\\IndependentProject\\client\\src\\App.jsx":"2","D:\\Other\\IndependentProject\\client\\src\\components\\index.js":"3","D:\\Other\\IndependentProject\\client\\src\\components\\ChannelListContainer.jsx":"4","D:\\Other\\IndependentProject\\client\\src\\components\\ChannelSearch.jsx":"5","D:\\Other\\IndependentProject\\client\\src\\components\\ChannelContainer.jsx":"6","D:\\Other\\IndependentProject\\client\\src\\assets\\SearchIcon.js":"7","D:\\Other\\IndependentProject\\client\\src\\components\\TeamChannelList.jsx":"8","D:\\Other\\IndependentProject\\client\\src\\assets\\AddChannel.js":"9","D:\\Other\\IndependentProject\\client\\src\\components\\TeamChannelPreview.jsx":"10","D:\\Other\\IndependentProject\\client\\src\\components\\Auth.jsx":"11"},{"size":147,"mtime":1680305940178,"results":"12","hashOfConfig":"13"},{"size":925,"mtime":1680310108001,"results":"14","hashOfConfig":"13"},{"size":368,"mtime":1680127229323,"results":"15","hashOfConfig":"13"},{"size":2572,"mtime":1680312289478,"results":"16","hashOfConfig":"13"},{"size":1213,"mtime":1680114901739,"results":"17","hashOfConfig":"13"},{"size":167,"mtime":1679338280641,"results":"18","hashOfConfig":"13"},{"size":479,"mtime":1680114427245,"results":"19","hashOfConfig":"13"},{"size":1059,"mtime":1680115812530,"results":"20","hashOfConfig":"13"},{"size":723,"mtime":1680114817176,"results":"21","hashOfConfig":"13"},{"size":1396,"mtime":1680126432658,"results":"22","hashOfConfig":"13"},{"size":3845,"mtime":1680312243493,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"edqe8l",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"D:\\Other\\IndependentProject\\client\\src\\index.js",[],[],"D:\\Other\\IndependentProject\\client\\src\\App.jsx",[],[],"D:\\Other\\IndependentProject\\client\\src\\components\\index.js",[],[],[],"D:\\Other\\IndependentProject\\client\\src\\components\\ChannelListContainer.jsx",["61","62","63","64"],[],"D:\\Other\\IndependentProject\\client\\src\\components\\ChannelSearch.jsx",["65","66","67"],[],"import React, {useState, useEffect} from 'react';\r\nimport { useChatContext } from 'stream-chat-react';\r\nimport {SearchIcon} from '../assets/SearchIcon.js';\r\n\r\nconst ChannelSearch = () => {\r\n    const [query, setQuery] = useState('');\r\n    const [LoadingChannels, setLoading] = useState(false);\r\n    const getChannels = async (text) => {\r\n        try {\r\n            // TODO: fetch channels\r\n        } catch (error) {\r\n            setQuery('')\r\n        }\r\n    }\r\n    const onSearch = (event) => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        setQuery(event.target.value);\r\n        getChannels(event.target.value);\r\n    }\r\n    return (\r\n        <div className = \"channel-search_container\">\r\n            <div className = \"channel-search_input_wrapper\">\r\n                <div className = \"channel-search_input_icon\">\r\n                    <SearchIcon></SearchIcon>\r\n                </div>\r\n                <input className = \"channel-_input_text\" \r\n                placeholder = \"Search\"\r\n                type = \"text\"\r\n                value = {query}\r\n                onChange = {onSearch}>\r\n                </input>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelSearch","D:\\Other\\IndependentProject\\client\\src\\components\\ChannelContainer.jsx",[],[],"D:\\Other\\IndependentProject\\client\\src\\assets\\SearchIcon.js",[],[],"D:\\Other\\IndependentProject\\client\\src\\components\\TeamChannelList.jsx",["68"],[],"import React from 'react'\r\nimport {AddChannel} from '../assets/AddChannel.js';\r\n\r\nconst TeamChannelList = ({children, error = false, loading, type}) => {\r\n    if(error){\r\n        return type === 'team' ? (\r\n            <div className='team-channel-list'>\r\n                <p className='team-channel-list_message'>\r\n                    Wait\r\n                </p>\r\n            </div>\r\n        ) : null\r\n    }\r\n    if(loading){\r\n        return(\r\n            <div className='team-channel-list'>\r\n            <p className='team-channel-list_message loading'>\r\n                {type === 'team' ? 'Channels' : 'Messages'} loading...\r\n            </p>\r\n        </div> \r\n        )\r\n    }\r\n  return (\r\n    <div className='tean-channel-list'>\r\n        <div className='team-channel-list_header'>\r\n            <p className='team-channel-list_header_title'>\r\n                {type === 'team' ? 'Channels' : 'Direct Messages'}\r\n            </p>\r\n            {/* Button add channel */}\r\n        </div>\r\n        {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TeamChannelList","D:\\Other\\IndependentProject\\client\\src\\assets\\AddChannel.js",[],[],"D:\\Other\\IndependentProject\\client\\src\\components\\TeamChannelPreview.jsx",["69"],[],"import React from 'react'\r\nimport { Avatar, ChannelPreview, useChatContext } from 'stream-chat-react'\r\n\r\nconst TeamChannelPreview = ({channel, type}) => {\r\n    const {channel: activeChannel, client} = useChatContext();\r\n    const ChannelPreview = () => (\r\n        <p className = 'channel-preview_item'>\r\n            # {channel?.data?.name || channel?.data?.id}\r\n        </p>\r\n    );\r\n   \r\n    const DirectPreview = () => {\r\n        const members = Object.values(channel.state.members).filter(({user}) => user.id !== client.userID)\r\n        return (\r\n            <div className = 'channel-preview_item single'>\r\n                <Avatar \r\n                    image = {members[0]?.user?.image}\r\n                    name = {members[0]?.user?.fullName}\r\n                    size = {32}\r\n                >\r\n                </Avatar>\r\n                <p>\r\n                    {members[0]?.user?.fullName}\r\n                </p>\r\n        \r\n            </div>\r\n          )\r\n    }\r\n    return (\r\n        <div className = {channel?.id === activeChannel?.id \r\n            ? 'channel-preview_wrapper_selected'\r\n            : 'channel-preview_wrapper'\r\n            }\r\n            onClick = {() => {\r\n                console.log(channel);\r\n            }}\r\n            >\r\n                {type === 'team' ? <ChannelPreview /> : <DirectPreview/>}\r\n        </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default TeamChannelPreview","D:\\Other\\IndependentProject\\client\\src\\components\\Auth.jsx",["70","71"],[],{"ruleId":"72","severity":1,"message":"73","line":2,"column":21,"nodeType":"74","messageId":"75","endLine":2,"endColumn":35},{"ruleId":"72","severity":1,"message":"76","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":15},{"ruleId":"72","severity":1,"message":"77","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":13},{"ruleId":"72","severity":1,"message":"78","line":6,"column":8,"nodeType":"74","messageId":"75","endLine":6,"endColumn":13},{"ruleId":"72","severity":1,"message":"79","line":1,"column":26,"nodeType":"74","messageId":"75","endLine":1,"endColumn":35},{"ruleId":"72","severity":1,"message":"73","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":24},{"ruleId":"72","severity":1,"message":"80","line":7,"column":12,"nodeType":"74","messageId":"75","endLine":7,"endColumn":27},{"ruleId":"72","severity":1,"message":"81","line":2,"column":9,"nodeType":"74","messageId":"75","endLine":2,"endColumn":19},{"ruleId":"72","severity":1,"message":"82","line":2,"column":18,"nodeType":"74","messageId":"75","endLine":2,"endColumn":32},{"ruleId":"72","severity":1,"message":"83","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":14},{"ruleId":"84","severity":1,"message":"85","line":18,"column":21,"nodeType":"86","messageId":"87","endLine":18,"endColumn":22,"fix":"88"},"no-unused-vars","'useChatContext' is defined but never used.","Identifier","unusedVar","'Cookies' is defined but never used.","'icon1' is defined but never used.","'icon2' is defined but never used.","'useEffect' is defined but never used.","'LoadingChannels' is assigned a value but never used.","'AddChannel' is defined but never used.","'ChannelPreview' is defined but never used.","'signIn' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","SpreadElement","unexpectedWhitespace",{"range":"89","text":"90"},[458,459],""]